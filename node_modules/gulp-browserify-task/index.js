var gulp            = require('gulp');
var gutil           = require('gulp-util');
var notify          = require('gulp-notify');
var browserify      = require('browserify');
var watchify        = require('watchify');
var source          = require('vinyl-source-stream');
var _               = require('lodash');

function browserifyTask (configs, callback, debug) {
    var bundleQueue = configs.length;
    configs.forEach(browserifier);

    function browserifier (args) {

        if (debug) {
            args = _.extend({}, args, watchify.args, {debug: true});
            args = _.omit(args, ['external', 'require']);
        }

        var b = browserify(args);

        if(debug) {
            b = watchify(b);
            b.on('update', bundle);
            gutil.log('Watching files required by', gutil.colors.yellow(args.outputName));
        }

        return bundle();

        function bundle () {

            gutil.log('Bundling', gutil.colors.green(args.outputName) + '...');

            return b
                .bundle()
                .on('error', function () {
                    var args = Array.prototype.slice.call(arguments);

                    notify.onError({
                        title: "Compile Error",
                        message: "<%= error %>"
                    }).apply(this, args);

                    this.emit('end');
                })
                .pipe(source(args.outputName))
                .pipe(gulp.dest(args.dest))
                .on('end', reportFinished);
        }

        function reportFinished () {
            gutil.log('Bundled');
            if(--bundleQueue === 0) {
                callback();
            }
        }
    }
}

module.exports = browserifyTask;
